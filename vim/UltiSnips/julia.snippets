snippet #!
#! /usr/bin/julia
endsnippet

snippet fu
function ${1:\$name}(${2:args...})
	${3:\$body}
end
endsnippet

snippet mac
macro ${1:\$name}(${2:args...})
	${3:\$body}
end
endsnippet

snippet mod
module ${1:\$name}

${2:\$body}

end # module
endsnippet

snippet ty
type ${1:\$name}
	${2:\$body}
end
endsnippet

snippet imm
immutable ${1:\$name}
	${2:\$body}
end
endsnippet

snippet inc
include("${1:\$filename}.jl")
endsnippet

snippet us
using ${1:\$modulename}
endsnippet

snippet im
import ${1:\$modulename}
endsnippet

snippet ima
importall ${1:\$modulename}
endsnippet

snippet ex
export ${1:\$names...}
endsnippet

snippet for
for ${1:\$e} in ${2:\$collection}
	${3:\$body}
end
endsnippet

snippet wh
while ${1:\$condition}
	${2:\$body}
	${3:\$counter}
end
endsnippet

snippet pr
print("${1}")
endsnippet

snippet prl
println("${1}")
endsnippet
